#include <iostream>

using namespace std;

struct Process {
    int id;
    int burst_time;
};

void FCFS(Process proc[], int n) {
    int wt[n], tat[n], total_wt = 0, total_tat = 0;

    wt[0] = 0;  // First process doesn't wait

    // Calculate waiting time for remaining processes
    for (int i = 1; i < n; i++) {
        wt[i] = wt[i - 1] + proc[i - 1].burst_time;
    }

    // Calculate turnaround time for all processes
    for (int i = 0; i < n; i++) {
        tat[i] = wt[i] + proc[i].burst_time;
        total_wt += wt[i];
        total_tat += tat[i];
    }

    // Print the calculated values
    cout << "Process ID\tBurst Time\tWaiting Time\tTurnaround Time\n";
    for (int i = 0; i < n; i++) {
        cout << "   " << proc[i].id << "\t\t" << proc[i].burst_time << "\t\t" << wt[i] << "\t\t" << tat[i] << endl;
    }

    cout << "\nAverage waiting time = " << (float)total_wt / (float)n;
    cout << "\nAverage turnaround time = " << (float)total_tat / (float)n;
}

int main() {
    int n;
    cout << "Enter the number of processes: ";
    cin >> n;

    Process proc[n];
    cout << "Enter the burst time for each process:\n";
    for (int i = 0; i < n; i++) {
        proc[i].id = i + 1;
        cout << "Process " << i + 1 << ": ";
        cin >> proc[i].burst_time;
    }

    FCFS(proc, n);

    return 0;
}
