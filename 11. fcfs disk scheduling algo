#include <iostream>
#include <vector>
#include <cmath>

using namespace std;

// Function to calculate FCFS disk scheduling
void fcfsDiskScheduling(vector<int> requests, int head) {
    int seekCount = 0; // Total seek count
    vector<int> seekSequence;

    // Process each request in the order they arrive
    for (int i = 0; i < requests.size(); i++) {
        seekSequence.push_back(requests[i]);

        // Calculate the distance from the current head position to the request
        seekCount += abs(head - requests[i]);

        // Move the head to the current request position
        head = requests[i];
    }

    // Print results
    cout << "Total number of seek operations: " << seekCount << endl;
    cout << "Seek sequence: ";
    for (int i = 0; i < seekSequence.size(); i++) {
        cout << seekSequence[i] << " ";
    }
    cout << endl;
}

int main() {
    // Example inputs
    vector<int> requests = {98, 183, 37, 122, 14, 124, 65, 67};
    int head = 53;

    cout << "Initial head position: " << head << endl;
    cout << "Disk requests: ";
    for (int req : requests) {
        cout << req << " ";
    }
    cout << endl;

    // Call the FCFS scheduling function
    fcfsDiskScheduling(requests, head);

    return 0;
}
